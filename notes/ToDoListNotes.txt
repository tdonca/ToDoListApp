====================================================12/10/2018

To Do List App.

Features:
	Display entries in a List View
	Create new entries
	Delete entries
	Save user data so entries are persistent
	Create future reminder notifications (background)


------------------------------


1. Create list view for entries
	Linear Layout
	TextView objects as simple entries
	Tap TextView to delete
	Tap + button to add new entries in a new activity


Main Activity:
	Linear Layout of TextView objects
	Linear Layout Info: https://developer.android.com/reference/android/widget/LinearLayout


	I want on startup to load all saved tasks into memory, then create a TextView for
	each one to display in the linear layout

	Create TextView in onCreate():
		Create a TextView instance
		**Set its layout parameters by getting the LayoutParams of the parent view
		add to the target view with (target).addView(newView);


	Make Tasks Removeable:
		create an onClickListener that removes the view from the parent view when clicked
		new View.OnClickListener() { ...
		assign the listener to each task view object


	
	Create new tasks:

		Add FloatingActionButton from Basic Activity Template
			Requires a CoordinatorLayout	

===================================================================================12/11/18

		OnClick:
			launch a new activity that takes in a string and returns a new task to the main activity



Create Task Activity:
	
	using onClick in Main Activity
	first create a new activity in the project
	add it to the manifest, and set it as a child of the main activity

	create a new intent for the create task activity
		 Intent new_task_intent = new Intent(this, CreateTaskActivity.class);
        startActivityForResult(new_task_intent, TEXT_REQUEST);

    use callback for receiving the response:
    	public void onActivityResult( int request_code, int result_code, Intent data ){ ...




Store Tasks in a file on internal storage:
	
	maintain a file that holds the active tasks

	on app create:
		try openFileInput()
			read strings and add to task list 
		catch FileNotFoundException


	on app close:
		delete the existing file
		openFileOutput()
		write current task strings
		close file
